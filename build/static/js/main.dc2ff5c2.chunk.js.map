{"version":3,"sources":["components/navbar.js","components/job-form.js","components/job-listings.js","components/search_results.js","components/app-container.js","components/job_listing_page.js","components/footer.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Navbar","id","to","className","Component","JobForm","props","method","onSubmit","this","handleSubmit","required","type","name","placeholder","job_description","value","jobFilter","onChange","handleJobFilter","location_description","locationFilter","handleLocationFilter","htmlFor","JobListings","require","data","map","job","x","key","pathname","state","title","company","location","SearchResults","returnedResults","beganSearching","toggle_results","AppContainer","job_description_filter","location_filter","job_listings","returned_results","began_searching","bind","e","setState","target","filters","description","fetch","then","json","jobs","length","console","log","getResults","preventDefault","JobListing","parent","document","querySelector","child","remove","DOMParser","parseFromString","ReactHtmlParser","body","innerHTML","src","company_logo","how_to_apply","ReactDOM","createPortal","renderListing","Footer","href","App","exact","path","component","Boolean","window","hostname","match","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.dc2ff5c2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n        <nav>\r\n            <div id=\"link-container\">\r\n                <Link to=\"/\" className=\"link nav-link\"><i className=\"fas fa-horse-head\"></i></Link>\r\n            </div>\r\n        </nav>\r\n        );\r\n    }\r\n}","import React,{Component} from 'react';\r\n\r\nexport default class JobForm extends Component\r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <form method=\"get\" onSubmit={this.props.handleSubmit}>\r\n                    <input\r\n                    required\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder={this.props.job_description}\r\n                        value={this.props.jobFilter}\r\n                        onChange={this.props.handleJobFilter}\r\n                        />\r\n                    <input\r\n                    required\r\n                        type=\"text\" \r\n                        name=\"location\"\r\n                        placeholder={this.props.location_description}\r\n                        value={this.props.locationFilter}\r\n                        onChange={this.props.handleLocationFilter}\r\n                        />\r\n\r\n                    <input type=\"checkbox\" name=\"fulltime\" value=\"Full time only\"/>\r\n                    <label htmlFor=\"fulltime\">Full time only</label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Link} from 'react-router-dom';\n\nvar axios = require('axios');\n\n\nclass JobListings extends Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    render()\n    {\n        return (\n            <div id=\"job-listing\">\n                \n                <ul>\n                    {\n                        this.props.data.map( (job , x) => (\n                                <li key={x}>\n                                    <div className=\"listing-container\">\n                                        <div className=\"listing-title\">\n                                            <h4>\n                                            <Link to={{\n                                                pathname: \"/listing\",\n                                                state:{\n                                                    job: job\n                                                }\n                                                }}>{job.title}</Link>\n                                            </h4>\n                                            <p>{job.company} </p>\n                                        </div>\n                                        <div className=\"listing-meta-data\">\n                                        <span>\n                                            {job.location}\n                                        </span>\n                                        <span>\n                                            {job.type}\n                                        </span>\n                                        </div>\n                                    </div>\n                                </li>\n                        ))\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default JobListings;","import React, {Component} from \"react\";\nimport JobListings from \"./job-listings\";\n\n\nclass SearchResults extends Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    toggle_results()\n    {\n        if(this.props.returnedResults && this.props.beganSearching)\n        {\n            return <JobListings data={this.props.data} />;\n        }\n        //Edit these sections\n        else if(!this.props.returnedResults && this.props.beganSearching)\n        {\n        \n            return <h1>No results...</h1>;\n        }\n        else\n        {\n            return <h1>Begin searching!</h1>;\n        }\n    }\n\n    render()\n    {\n        return this.toggle_results()\n    }\n}\n\nexport default SearchResults;","import React, {Component} from 'react';\nimport JobForm from \"./job-form\";\nimport SearchResults from \"./search_results\";\n\nexport default class AppContainer extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            job_description: \"Filter by title, benefits, companies, expertise\",\n            location_description: \"Filter by city, state, zip code or country\",\n            job_description_filter:'',\n            location_filter:'',\n            job_listings: [],\n            returned_results:false,\n            began_searching: false\n        };\n        this.handleJobFilter = this.handleJobFilter.bind(this);\n        this.handleLocationFilter = this.handleLocationFilter.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleJobFilter(e)\n    {\n        this.setState({job_description_filter: e.target.value});\n    }\n\n    handleLocationFilter(e)\n    {\n        this.setState({location_filter: e.target.value});\n    }\n\n    async getResults(filters)\n    {\n\n        if(filters.description && filters.location)\n        {\n            try {\n                await fetch(`http://localhost:8080/api?description=${filters.description}&location=${filters.location}`)\n                .then((job_listings) => {\n                    return (job_listings.json());\n                })\n                .then((jobs) => {\n                    if(jobs.length > 0)\n                    {\n                        this.setState({job_listings: jobs});\n                        this.setState({returned_results: true})\n                    }\n                    else\n                    {\n                        this.setState({returned_results: false})\n                    }\n                });\n            }\n            catch(e)\n            {\n                console.log(e);\n            }\n        }\n    }\n\n    handleSubmit(e)\n    {\n        let filters = {\n            description: this.state.job_description_filter,\n            location: this.state.location_filter\n        };\n        this.setState({began_searching: true}); //user began searching.\n        this.getResults(filters);\n        e.preventDefault();\n    }\n\n    \n    render()\n    {\n        return(\n\n            <div>\n            <JobForm\n                job_description={this.state.job_description}\n                location_description={this.state.location_description}\n                jobFilter={this.state.job_description_filter}\n                locationFilter={this.state.location_filter}\n                handleSubmit={this.handleSubmit}\n                handleJobFilter={this.handleJobFilter}\n                handleLocationFilter={this.handleLocationFilter}\n            />\n            <SearchResults\n                returnedResults={this.state.returned_results}\n                beganSearching={this.state.began_searching}\n                data={this.state.job_listings}\n            />\n\n            </div>\n            \n        )\n    }\n}","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Link} from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\n\n\n\nclass JobListing extends Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    handle_click(e)\n    {\n        let parent = document.querySelector(\"body\")\n        let child = document.querySelector(\"#job_listing_container\");\n\n        parent.remove(child);\n        e.preventDefault();\n\n\n\n    }\n\n    renderListing()\n    {\n        //holds all job information\n        const job = this.props.location.state.job;\n        //parses text to html\n        const parser = new DOMParser();\n        //parsed html text\n        const description = (parser.parseFromString(job.description, 'text/html'));\n\n\n        \n        return (\n            <div id=\"job_listing_container\">\n                <div id=\"job_listing_content\">\n                <Link to={{ pathname: \"/\"}}><i className=\"fas fa-chevron-circle-left\"></i></Link>\n                <h1>{job.title}</h1>\n                <p>{job.company}</p>\n                <p>{job.location}</p>\n                    {ReactHtmlParser(description.body.innerHTML)}\n                </div>\n                <div id=\"job_listing_side_border\">\n                    <div id=\"job_application_container\">\n                        <h3>Interested? Apply Now</h3>\n                        <img src={job.company_logo}/>\n                        <div id=\"application_link\">\n                            <h2>Apply Here</h2>{ReactHtmlParser(job.how_to_apply)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    render()\n    {\n        // Renders this page outside the app container, allowing it to get full screen width & height\n        return ReactDOM.createPortal(\n                this.renderListing(),\n                document.querySelector(\"body\")\n        )\n    }\n}\n\nexport default JobListing;","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\n\nexport default class Footer extends Component\n{\n    render()\n    {\n        return (\n            <footer>\n            <a href=\"https://github.com/cryptorodeo/employify\" target=\"_blank\">Github</a>\n            <p><i>Make your move.</i></p>\n            <p>© 2020 Employify inc. All rights reserved.</p>\n         </footer> \n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Route} from \"react-router-dom\";\n\n//Component imports\nimport Navbar from \"./components/navbar\";\nimport AppContainer from \"./components/app-container\";\nimport JobListing from \"./components/job_listing_page\";\nimport Footer from \"./components/footer\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Route \n          exact path=\"/listing\" \n          component={JobListing}\n          />\n      <div id=\"main-container\">\n        <Navbar />\n        <div id=\"job-container\">\n          <AppContainer/>\n        </div>\n\n        <Footer />\n      </div> \n\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport JobListing from \"./components/job_listing_page\";\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}